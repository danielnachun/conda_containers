name: Push containers to GitHub Packages (test)

on:
  pull_request:
    types: [closed]

jobs:
  upload_containers:
    if: github.event.pull_request.merged == true 
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Download docker containers
        id: download-docker-containers
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: container_build.yaml
          name: '*_docker_${{ github.event.pull_request.head.sha }}'
          name_is_regexp: true
          path: /tmp/docker_artifacts
          if_no_artifact_found: warn

      - name: Download apptainer containers
        id: download-apptainer-containers
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: container_build.yml
          name: '*_apptainer_${{ github.event.pull_request.head.sha }}'
          name_is_regexp: true
          path: /tmp/apptainer_artifacts
          if_no_artifact_found: warn

      - name: Download charliecloud containers
        id: download-charliecloud-containers
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: container_build.yml
          name: '*_charliecloud_${{ github.event.pull_request.head.sha }}'
          name_is_regexp: true
          path: /tmp/charliecloud_artifacts
          if_no_artifact_found: warn

      - name: Log in to GitHub Packages with docker
        if: steps.download-docker-containers.outputs.found_artifact == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push docker containers to GitHub
        if: steps.download-docker-containers.outputs.found_artifact == 'true'
        run: |
          find /tmp/docker_artifacts -name *_docker.tar -exec \
            image_name=$(sed 's/_docker.tar//g' $(basename {})) && \
            docker load --input {} && \
            docker push ghcr.io/${{ github.repository_owner }}/${image_name}_docker:latest \;

      - name: Setup micromamba
        if: steps.download-apptainer-containers.outputs.found_artifact == 'true' || steps.download-charliecloud-containers.outputs.found_artifact == 'true'
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-name: containers
          create-args: apptainer charliecloud
          generate-run-shell: true
      
      - name: Log in to GitHub Packages with apptainer
        if: steps.download-apptainer-containers.outputs.found_artifact == 'true'
        shell: micromamba-shell {0}
        run: |
          apptainer remote login --username ${{ github.repository_owner }} \
            --password ${{ secrets.GITHUB_TOKEN }} \
            oras://ghcr.io/${{ github.repository_owner }}

      - name: Push apptainer containers to GitHub Packages
        if: steps.download-apptainer-containers.outputs.found_artifact == 'true'
        shell: micromamba-shell {0}
        run: |
          find /tmp/apptainer_artifacts -name *_apptainer.sif -exec \
            image_name=$(sed 's/_apptainer.sif//g' $(basename {})) && \
            apptainer push {} oras://ghcr.io/${{ github.repository_owner }}/${image_name}_apptainer:latest \;

      - name: Push charliecloud containers to GitHub Packages
        if: steps.download-charliecloud-containers.outputs.found_artifact == 'true'
        shell: micromamba-shell {0}
        env:
          CH_IMAGE_USERNAME: ${{ github.repository_owner }}
          CH_IMAGE_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          find /tmp/charliecloud_artifacts -name *_charliecloud.tar -exec \
            image_name=$(sed 's/_charliecloud.tar//g' $(basename {})) && \
            ch-image import {} ${image_name}_charliecloud:latest && \
            ch-image push ${image_name}_charliecloud:latest ghcr.io/${{ github.repository_owner }}/${image_name}_charliecloud:latest \;
